{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\svelte-backoffice\\src\\components\\BasicTable.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n    import axios from 'axios';\r\n    import {Link} from 'svelte-routing';\r\n\r\n    export let getToken;\r\n\r\n    export let table;\r\n\r\n    export let table_headers;\r\n    export let data;\r\n    export let toggleRowSelect;\r\n    export let selectedRows;\r\n    export let selection_field;\r\n\r\n    export let toggle_fields;\r\n    export let onToggle;\r\n\r\n    function handleToggleClick(row){\r\n        if (row.ID !== null){\r\n        \tconsole.log(\"Hey\");\r\n            axios.delete(`/api/delete/${table}`, {\r\n                data: {\r\n                    rows: [row.ID]\r\n                },\r\n                headers: {\r\n                    Authorization: getToken()\r\n                }\r\n            }).then(res => {\r\n                onToggle();\r\n            }).catch(err =>{\r\n                console.log(err.response);\r\n            });\r\n        } else {\r\n        \tconsole.log(\"Bye\");\r\n        \tlet data = {ID: null};\r\n        \tconsole.log(toggle_fields);\r\n        \tfor(let i = 0; i < toggle_fields.length; i++) {\r\n        \t\tconsole.log(toggle_fields[i].field);\r\n        \t    data[toggle_fields[i].field] = row[toggle_fields[i].field];\r\n        \t}\r\n        \tconsole.log(data);\r\n\r\n            axios.post(`/api/insert/${table}`, data, {headers: {Authorization: getToken()}}).then(res => {\r\n                console.log(`Successfully added relation`);\r\n                onToggle();\r\n            }).catch(err => {\r\n                console.log(err.response);\r\n            });\r\n        }\r\n        console.log(row);\r\n    }\r\n\r\n    function handleRowClick(event, id) {\r\n    \tif (!event.target.classList.contains(\"toggler\")) {\r\n            toggleRowSelect(id);\r\n    \t}\r\n    \t// event.currentTarget.classList.toggle(\"bg-secondary\");\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .toggler{\r\n        min-width: 50px;\r\n    }\r\n</style>\r\n\r\n<div class=\"table-responsive rounded dark-scroll\">\r\n    <table class=\"table table-dark table-bordered table-scrollable table-hover nowrap m-0\">\r\n        <thead>\r\n            <tr class=\"table-headers\">\r\n                {#each table_headers as header, i}\r\n                    <th scope=\"col\" class=\"position-sticky border-bottom-0 border-top-0 top-0px bg-darkest shadow-y-dark-1px {header.actions ? ' text-center' : ''}\">{header.columnName}</th>\r\n                {/each}\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {#each data as row, i}\r\n                <tr class=\"{selectedRows.indexOf(row[selection_field]) === -1 ? 'table-row' : 'table-row bg-secondary'}\"\r\n                on:click=\"{event => {handleRowClick(event, row[selection_field])}}\">\r\n                    {#each table_headers as header, i}\r\n                        {#if header.actions}\r\n                            <td class=\"text-center vertical-align-middle\">\r\n                            {#each header.actions as action}\r\n                                <Link to={`${action.link}${row[action.query_field]}`}><i class=\"{`fas ${action.icon} fa-fw cursor-pointer mr-1 text-light`}\"></i></Link>\r\n                            {/each}\r\n                            </td>\r\n                        {:else}\r\n                            {#if header.toggler}\r\n                                <td class=\"{row[header.key] === 'true' ? 'bg-success' : 'bg-danger'} cursor-pointer toggler\" on:click=\"{event => {handleToggleClick(row)}}\">&nbsp;</td>\r\n                            {:else}\r\n                                <td class=\"{header.wrap ? 'wrap' : ''}\">{row[header.key]}</td>\r\n                            {/if}\r\n                        {/if}\r\n                    {/each}\r\n                </tr>\r\n            {/each}\r\n        </tbody>\r\n    </table>\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "AA6DI,uBAAQ,CAAC,AACL,SAAS,CAAE,IAAI,AACnB,CAAC"
}